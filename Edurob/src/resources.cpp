#include "resources.h"

const char* configuration =
    "<!DOCTYPE html>"
    "<html lang=\"en\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
    "    <title>Configuration</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-col\">"
    "        <h1>Configuration</h1>"
    "        <form action=\"/configuration\" method=\"get\">"
    "            <div class=\"layout-col\">"
    "            <div class=\"box\">"
    "                <table><tbody></tbody>"
    "                <tr><td><label for=\"radabstand\">Radabstand:</label></td><td><input type=\"number\" id=\"radabstand\" name=\"radabstand\" min=\"0\" step=\"0.0001\" placeholder=\"Radabstand in meters\" required></td></tr>"
    "                "
    "                <tr><td><label for=\"axenabstand\">Axenabstand:</label></td><td><input type=\"number\" id=\"axenabstand\" name=\"axenabstand\" min=\"0\" step=\"0.0001\" placeholder=\"Axenabstand in meters\" required></td></tr>"
    "                "
    "                <tr><td><label for=\"radradius\">Radradius:</label></td><td><input type=\"number\" id=\"radradius\" name=\"radradius\" min=\"0\" step=\"0.0001\" placeholder=\"Radradius in meters\" required></td></tr>"
    "                "
    "                <tr><td><label for=\"encoderaufloesung\">Encoderauflösung:</label></td><td><input type=\"number\" id=\"encoderaufloesung\" name=\"encoderaufloesung\" min=\"1\" max=\"65535\" step=\"1\" placeholder=\"Encoderauflösung (integer)\" value=\"28\" required></td></tr>"
    "                "
    "                <tr><td><label for=\"uebersetzung\">Übersetzung:</label></td><td><input type=\"number\" id=\"uebersetzung\" name=\"uebersetzung\" min=\"1\" max=\"65535\" step=\"1\" placeholder=\"Übersetzung (integer)\" value=\"100\" required></td></tr>"
    "                "
    "                <tr><td><label for=\"kinematicOption\">Kinematic Option:</label></td><td>"
    "                <select id=\"kinematicOption\" name=\"kinematicOption\" required>"
    "                    <option value=\"0\">Mecanum</option>"
    "                    <option value=\"1\">Omni4</option>"
    "                    <option value=\"2\">Omni3</option>"
    "                    <option value=\"3\">Diff</option>"
    "                </select></td></tr>"
    "                </tbody>"
    "                </table>"
    "            </div>"
    "            <button class=\"link\" type=\"submit\">Save</button>"
    "            </div>"
    "        </form>"
    "        <button class=\"link\" onclick=\"window.location.href='/'\">Hauptmenü</button>"
    "    </div>"
    " <script>\n"
    "        // Restore inputs from URL\n"
    "        const urlParams = new URLSearchParams(window.location.search);\n"
    "        document.querySelectorAll('input[name]').forEach(input => {\n"
    "            const name = input.name;\n"
    "            if (urlParams.has(name)) {\n"
    "                input.value = urlParams.get(name);\n"
    "            }\n"
    "        });\n"
    "        window.onload = function () {\n"
    "            \n"
    "            // Initialize Server-Sent Events (SSE)\n"
    "            let eventSource = new EventSource('/sse?type=configuration');\n"
    "\n"
    "            // SSE feedback update\n"
    "            eventSource.onmessage = function(event) {\n"
    "                try {\n"
    "                    const data = JSON.parse(event.data);\n"
    "                    // Update input fields with latest values\n"
    "                    document.getElementById(\"radabstand\").value = data.radabstand;\n"
    "                    document.getElementById(\"axenabstand\").value = data.axenabstand;\n"
    "                    document.getElementById(\"radradius\").value = data.radradius;\n"
    "                    document.getElementById(\"encoderaufloesung\").value = data.encoderaufloesung;\n"
    "                    document.getElementById(\"uebersetzung\").value = data.uebersetzung;\n"
    "                    document.getElementById(\"kinematicOption\").value = data.kinematicOption;\n"
    "\n"
    "                } catch (err) {\n"
    "                    console.error(\"SSE data error:\", err);\n"
    "                }\n"
    "                eventSource.close();\n"
    "            };\n"
    "\n"
    "        }\n"
    "    </script>\n"
    "</body>"
    "</html>";

const char* differential =
    "<!DOCTYPE html>"
    "<html lang=\"de\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <title>Kinematik Differential</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-row\">"
    "    <div class=\"box\">"
    "    <p><strong>Unterstützte Operationen:</strong></p>"
    "    <ul>"
    "        <li><code>+</code></li>"
    "        <li><code>-</code></li>"
    "        <li><code>*</code></li>"
    "        <li><code>/</code></li>"
    "        <li><code>PI</code></li>"
    "        <li><code>sqrt(x)</code></li>"
    "        <li><code>sin(x)</code></li>"
    "        <li><code>cos(x)</code></li>"
    "        <li><code>tan(x)</code></li>"
    "        <li><code>pow(x, y)</code> </li>"
    "    </ul>"
    "    </div>"
    "    <div class=\"layout-col\">"
    "        <h1>Kinematik Konfiguration</h1>"
    "        <form action=\"/differential\" method=\"get\">"
    "            <div class=\"layout-col\">"
    "            <div class=\"box\">"
    "                <h2>Differential - Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"111\" required ></td><td><input type=\"string\" name=\"112\" required ></td><td><input type=\"string\" name=\"113\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"121\" required ></td><td><input type=\"string\" name=\"122\" required ></td><td><input type=\"string\" name=\"123\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"131\" required ></td><td><input type=\"string\" name=\"132\" required ></td><td><input type=\"string\" name=\"133\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"141\" required ></td><td><input type=\"string\" name=\"142\" required ></td><td><input type=\"string\" name=\"143\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"1\" required >"
    "                <h2>Inverse-Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"211\" required ></td><td><input type=\"string\" name=\"212\" required ></td><td><input type=\"string\" name=\"213\" required ></td><td><input type=\"string\" name=\"214\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"221\" required ></td><td><input type=\"string\" name=\"222\" required ></td><td><input type=\"string\" name=\"223\" required ></td><td><input type=\"string\" name=\"224\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"231\" required ></td><td><input type=\"string\" name=\"232\" required ></td><td><input type=\"string\" name=\"233\" required ></td><td><input type=\"string\" name=\"234\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"2\" required >"
    "            </div>"
    "            <button class=\"link\" type=\"submit\">Matrix speichern</button>"
    "            </div>"
    "        </form>"
    "        <button class=\"link\" onclick=\"window.location.href='/'\" >Hauptmenü</button>"
    "    </div>"
    "    </div>"
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    "    <script>\n"
    "        // Restore inputs from URL\n"
    "        const urlParams = new URLSearchParams(window.location.search);\n"
    "        document.querySelectorAll('input[name]').forEach(input => {\n"
    "            const name = input.name;\n"
    "            if (urlParams.has(name)) {\n"
    "                input.value = urlParams.get(name);\n"
    "            }\n"
    "        });\n"
    "        window.onload = function () {\n"
    "            \n"
    "            // Initialize Server-Sent Events (SSE)\n"
    "            let eventSource = new EventSource('/sse?type=differential');\n"
    "\n"
    "            // SSE feedback update\n"
    "            eventSource.onmessage = function(event) {\n"
    "                try {\n"
    "                    const data = JSON.parse(event.data);\n"
    "\n"
    "                    const matrix1 = data.matrix || [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]];  // 4x3\n"
    "                    const matrix2 = data.inverse || [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];  // 3x4\n"
    "                    const scalar1 = data.scalar1 || 0;\n"
    "                    const scalar2 = data.scalar2 || 0;\n"
    "\n"
    "                    // Fill matrix inputs\n"
    "                    matrix1.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${1}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar1 input\n"
    "                    const scalarInput1 = document.querySelector(`input[name=\"1\"]`);\n"
    "                    if (scalarInput1) scalarInput1.value = scalar1.toFixed(2);\n"
    "\n"
    "                    // Fill Inverse matrix inputs\n"
    "                    matrix2.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${2}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar2 input\n"
    "                    const scalarInput2 = document.querySelector(`input[name=\"2\"]`);\n"
    "                    if (scalarInput2) scalarInput2.value = scalar2.toFixed(2);\n"
    "                } catch (err) {\n"
    "                    console.error(\"SSE data error:\", err);\n"
    "                }\n"
    "                eventSource.close();\n"
    "            };\n"
    "\n"
    "        }\n"
    "    </script>\n"
    ""
    "</body>"
    "</html>";

const char* hauptmenu =
    "<!DOCTYPE html>"
    "<html lang=\"en\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
    "    <title>EduRob Settings</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-col\">"
    "        <h1>EduRob Settings</h1>"
    "        <div class=\"status-container\">"
    "            <div class=\"status\">"
    "                <div class=\"status-title\">Radabstand:</div>"
    "                <div class=\"status-value\" id=\"radabstand\">Loading...</div>"
    "            </div>"
    "            <div class=\"status\">"
    "                <div class=\"status-title\">Axenabstand:</div>"
    "                <div class=\"status-value\" id=\"axenabstand\">Loading...</div>"
    "            </div>"
    "            <div class=\"status\">"
    "                <div class=\"status-title\">Radradius:</div>"
    "                <div class=\"status-value\" id=\"radradius\">Loading...</div>"
    "            </div>"
    "            <div class=\"status\">"
    "                <div class=\"status-title\">Encoderauflösung:</div>"
    "                <div class=\"status-value\" id=\"encoderaufloesung\">Loading...</div>"
    "            </div>"
    "            <div class=\"status\">"
    "                <div class=\"status-title\">Übersetzung:</div>"
    "                <div class=\"status-value\" id=\"uebersetzung\">Loading...</div>"
    "            </div>"
    "            <div class=\"status\">"
    "                <div class=\"status-title\">Kinematik:</div>"
    "                <div class=\"status-value\" id=\"kinematik\">Loading...</div>"
    "            </div>"
    "        </div>"
    "        <button class=\"link\" onclick=\"window.location.href='/configuration'\" >Zu EduRob Settings</button>"
    "        <button class=\"link\" onclick=\"window.location.href='/kinematiklinks'\" >Zu Kinematik</button>"
    ""
    "        <div class=\"link\">"
    "            <div>"
    "            <input type=\"checkbox\" id=\"interpolatorCheckbox\" onchange=\"toggleCheckbox('interpolatorCheckbox')\">"
    "            <label for=\"interpolatorCheckbox\">Interpolator</label>"
    "            </div>"
    "        </div>"
    "        <button class=\"link hidden\" id=\"pathPlanningButton\"onclick=\"window.location.href='/pathplanning'\" >Zu Interpolator Konfiguration</button>"
    "        <div class=\"link\">"
    "            <div>"
    "            <input type=\"checkbox\" id=\"rosCheckbox\" onchange=\"toggleCheckbox('rosCheckbox')\">"
    "            <label for=\"rosCheckbox\">ROS</label>"
    "            </div>"
    "        </div>"
    "        <!-- Reboot Button -->"
    "        <button class=\"link\" onclick=\"sendReboot()\" >Neustart</button>"
    ""
    "    </div>"
    ""
    "    <script>\n"
    "        // Initialize Server-Sent Events (SSE)\n"
    "        let eventSource = new EventSource('/sse?type=index');\n"
    "\n"
    "        // Update status values when receiving events\n"
    "        eventSource.onmessage = function(event) {\n"
    "            const data = JSON.parse(event.data);\n"
    "            document.getElementById('radabstand').innerHTML = data.radabstand;\n"
    "            document.getElementById('axenabstand').innerHTML = data.axenabstand;\n"
    "            document.getElementById('radradius').innerHTML = data.radradius;\n"
    "            document.getElementById('encoderaufloesung').innerHTML = data.encoderaufloesung;\n"
    "            document.getElementById('uebersetzung').innerHTML = data.uebersetzung;\n"
    "            document.getElementById('kinematik').innerHTML = data.kinematik;\n"
    "            eventSource.close();\n"
    "        };\n"
    "\n"
    "        // Toggle buttons visibility based on checkbox state\n"
    "        function toggleCheckbox(checkedCheckbox) {\n"
    "            const interpolatorCheckbox = document.getElementById('interpolatorCheckbox');\n"
    "            const rosCheckbox = document.getElementById('rosCheckbox');\n"
    "            const pathPlanningButton = document.getElementById('pathPlanningButton');\n"
    "\n"
    "            if (checkedCheckbox === 'interpolatorCheckbox') {\n"
    "                if (interpolatorCheckbox.checked) {\n"
    "                    rosCheckbox.checked = false;\n"
    "                    pathPlanningButton.classList.remove('hidden');\n"
    "                } else {\n"
    "                    interpolatorCheckbox.checked = true; // Ensure one is always checked\n"
    "                }\n"
    "            } else if (checkedCheckbox === 'rosCheckbox') {\n"
    "                if (rosCheckbox.checked) {\n"
    "                    interpolatorCheckbox.checked = false;\n"
    "                    pathPlanningButton.classList.add('hidden');\n"
    "                } else {\n"
    "                    rosCheckbox.checked = true; // Ensure one is always checked\n"
    "                }\n"
    "            }\n"
    "        }\n"
    "\n"
    "        // Send reboot request with the current selected checkbox state\n"
    "        function sendReboot() {\n"
    "            const interpolatorCheckbox = document.getElementById('interpolatorCheckbox');\n"
    "            const selectedValue = interpolatorCheckbox.checked ? 0 : 1;\n"
    "\n"
    "            window.location.href = `/reboot?selected=${selectedValue}`;\n"
    "        }\n"
    "\n"
    "        // Ensure Interpolator checkbox is selected on page load\n"
    "        document.addEventListener('DOMContentLoaded', function () {\n"
    "            const interpolatorCheckbox = document.getElementById('interpolatorCheckbox');\n"
    "            const rosCheckbox = document.getElementById('rosCheckbox');\n"
    "\n"
    "            interpolatorCheckbox.checked = true;\n"
    "            rosCheckbox.checked = false;\n"
    "            toggleCheckbox('interpolatorCheckbox');\n"
    "        });\n"
    "    </script>\n"
    "</body>"
    "</html>";

const char* kinematiklinks =
    "<!DOCTYPE html>"
    "<html lang=\"de\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <title>Kinematik</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-col\">"
    "        <h1>Kinematik</h1>"
    "        <div class=\"info-box\">"
    "            <p>"
    "                Die Eingabefelder akzeptieren sowohl reine Zahlen und &pi; als auch einfache mathematische Ausdrücke.<br>Diese werden automatisch ausgewertet, bevor sie gespeichert werden."
    "            </p>"
    "            <p><strong>Unterstützte Operationen:</strong></p>"
    "            <ul>"
    "                <li><code>+</code> Addition (z.&nbsp;B. <code>3 + 4</code> → <code>7</code>)</li>"
    "                <li><code>-</code> Subtraktion (z.&nbsp;B. <code>7 - 2</code> → <code>5</code>)</li>"
    "                <li><code>*</code> Multiplikation (z.&nbsp;B. <code>2 * 3</code> → <code>6</code>)</li>"
    "                <li><code>/</code> Division (z.&nbsp;B. <code>10 / 5</code> → <code>2</code>)</li>"
    "                <li><code>PI</code> &pi; (z.&nbsp;B. <code>PI</code> → <code>3.14...</code>)</li>"
    "                <li><code>sqrt(x)</code> Quadratwurzel (z.&nbsp;B. <code>sqrt(2*2)</code> → <code>2</code>)</li>"
    "                <li><code>sin(x)</code> Sinusfunktion (z.&nbsp;B. <code>sin(PI)</code> → <code>0</code>)</li>"
    "                <li><code>cos(x)</code> Kosinusfunktion (z.&nbsp;B. <code>cos(PI/2)</code> → <code>0</code>)</li>"
    "                <li><code>tan(x)</code> Tangensfunktion (z.&nbsp;B. <code>tan(PI)</code> → <code>0</code>) (z.&nbsp;B. <code>tan(PI/2)</code> → <code>INF</code> -> <code>1000</code>)</li>"
    "                <li><code>pow(x, y)</code> Potenzfunktion (z.&nbsp;B. <code>pow(2, 3)</code> → <code>8</code>)</li>"
    "            </ul>"
    "            <p>"
    "                <strong>Hinweise:</strong><br>"
    "                • Verwenden Sie einen Punkt (<code>.</code>) als Dezimaltrennzeichen (z.&nbsp;B. <code>3.14</code>).<br>"
    "                • Leerzeichen sind optional, aber erlaubt (z.&nbsp;B. <code>4 / 2</code>).<br>"
    "                • Ungültige Ausdrücke werden stillschweigend ignoriert."
    "            </p>"
    "        </div>"
    "        <button class=\"link\" onclick=\"window.location.href='/mecanum'\" >Zu Mecanum</button>"
    "        <button class=\"link\" onclick=\"window.location.href='/omnifour'\" >Zu Omni4</button>"
    "        <button class=\"link\" onclick=\"window.location.href='/omnithree'\" >Zu Omni3</button>"
    "        <button class=\"link\" onclick=\"window.location.href='/differential'\" >Zu Differential</button>"
    "        <button class=\"link\" onclick=\"window.location.href='/'\" >Hauptmenü</button>"
    ""
    "    </div>"
    "</body>"
    "</html>";

const char* mecanum =
    "<!DOCTYPE html>"
    "<html lang=\"de\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <title>Kinematik Mecanum</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-row\">"
    "    <div class=\"box\">"
    "    <p><strong>Unterstützte Operationen:</strong></p>"
    "    <ul>"
    "        <li><code>+</code></li>"
    "        <li><code>-</code></li>"
    "        <li><code>*</code></li>"
    "        <li><code>/</code></li>"
    "        <li><code>PI</code></li>"
    "        <li><code>sqrt(x)</code></li>"
    "        <li><code>sin(x)</code></li>"
    "        <li><code>cos(x)</code></li>"
    "        <li><code>tan(x)</code></li>"
    "        <li><code>pow(x, y)</code> </li>"
    "    </ul>"
    "    </div>"
    "    <div class=\"layout-col\">"
    "        <h1>Kinematik Konfiguration</h1>"
    "        <form action=\"/mecanum\" method=\"get\">"
    "            <div class=\"layout-col\">"
    "            <div class=\"box\">"
    "                <h2>Mecanum - Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"111\" required ></td><td><input type=\"string\" name=\"112\" required ></td><td><input type=\"string\" name=\"113\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"121\" required ></td><td><input type=\"string\" name=\"122\" required ></td><td><input type=\"string\" name=\"123\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"131\" required ></td><td><input type=\"string\" name=\"132\" required ></td><td><input type=\"string\" name=\"133\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"1\" required >"
    "                <h2>Inverse-Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"211\" required ></td><td><input type=\"string\" name=\"212\" required ></td><td><input type=\"string\" name=\"213\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"221\" required ></td><td><input type=\"string\" name=\"222\" required ></td><td><input type=\"string\" name=\"223\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"231\" required ></td><td><input type=\"string\" name=\"232\" required ></td><td><input type=\"string\" name=\"233\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"2\" required >"
    "            </div>"
    "            <button class=\"link\" type=\"submit\">Matrix speichern</button>"
    "            </div>"
    "        </form>"
    "        <button class=\"link\" onclick=\"window.location.href='/'\" >Hauptmenü</button>"
    "    </div>"
    "    </div>"
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    "    <script>\n"
    "        // Restore inputs from URL\n"
    "        const urlParams = new URLSearchParams(window.location.search);\n"
    "        document.querySelectorAll('input[name]').forEach(input => {\n"
    "            const name = input.name;\n"
    "            if (urlParams.has(name)) {\n"
    "                input.value = urlParams.get(name);\n"
    "            }\n"
    "        });\n"
    "        window.onload = function () {\n"
    "            \n"
    "            // Initialize Server-Sent Events (SSE)\n"
    "            let eventSource = new EventSource('/sse?type=mecanum');\n"
    "\n"
    "            // SSE feedback update\n"
    "            eventSource.onmessage = function(event) {\n"
    "                try {\n"
    "                    const data = JSON.parse(event.data);\n"
    "\n"
    "                    const matrix1 = data.matrix || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n"
    "                    const matrix2 = data.inverse || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n"
    "                    const scalar1 = data.scalar1 || 0;\n"
    "                    const scalar2 = data.scalar2 || 0;\n"
    "\n"
    "                    // Fill matrix inputs\n"
    "                    matrix1.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${1}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar1 input\n"
    "                    const scalarInput1 = document.querySelector(`input[name=\"1\"]`);\n"
    "                    if (scalarInput1) scalarInput1.value = scalar1.toFixed(2);\n"
    "\n"
    "                    // Fill Inverse matrix inputs\n"
    "                    matrix2.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${2}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar2 input\n"
    "                    const scalarInput2 = document.querySelector(`input[name=\"2\"]`);\n"
    "                    if (scalarInput2) scalarInput2.value = scalar2.toFixed(2);\n"
    "                } catch (err) {\n"
    "                    console.error(\"SSE data error:\", err);\n"
    "                }\n"
    "                eventSource.close();\n"
    "            };\n"
    "\n"
    "        }\n"
    "    </script>\n"
    ""
    "</body>"
    "</html>";

const char* omni3 =
    "<!DOCTYPE html>"
    "<html lang=\"de\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <title>Kinematik Omni3</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-row\">"
    "    <div class=\"box\">"
    "    <p><strong>Unterstützte Operationen:</strong></p>"
    "    <ul>"
    "        <li><code>+</code></li>"
    "        <li><code>-</code></li>"
    "        <li><code>*</code></li>"
    "        <li><code>/</code></li>"
    "        <li><code>PI</code></li>"
    "        <li><code>sqrt(x)</code></li>"
    "        <li><code>sin(x)</code></li>"
    "        <li><code>cos(x)</code></li>"
    "        <li><code>tan(x)</code></li>"
    "        <li><code>pow(x, y)</code> </li>"
    "    </ul>"
    "    </div>"
    "    <div class=\"layout-col\">"
    "        <h1>Kinematik Konfiguration</h1>"
    "        <form action=\"/omnithree\" method=\"get\">"
    "            <div class=\"layout-col\">"
    "            <div class=\"box\">"
    "                <h2>Omni 3 - Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"111\" required ></td><td><input type=\"string\" name=\"112\" required ></td><td><input type=\"string\" name=\"113\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"121\" required ></td><td><input type=\"string\" name=\"122\" required ></td><td><input type=\"string\" name=\"123\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"131\" required ></td><td><input type=\"string\" name=\"132\" required ></td><td><input type=\"string\" name=\"133\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"1\" required >"
    "                <h2>Inverse-Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"211\" required ></td><td><input type=\"string\" name=\"212\" required ></td><td><input type=\"string\" name=\"213\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"221\" required ></td><td><input type=\"string\" name=\"222\" required ></td><td><input type=\"string\" name=\"223\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"231\" required ></td><td><input type=\"string\" name=\"232\" required ></td><td><input type=\"string\" name=\"233\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"2\" required >"
    "            </div>"
    "            <button class=\"link\" type=\"submit\">Matrix speichern</button>"
    "            </div>"
    "        </form>"
    "        <button class=\"link\" onclick=\"window.location.href='/'\" >Hauptmenü</button>"
    "    </div>"
    "    </div>"
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    "    <script>\n"
    "        // Restore inputs from URL\n"
    "        const urlParams = new URLSearchParams(window.location.search);\n"
    "        document.querySelectorAll('input[name]').forEach(input => {\n"
    "            const name = input.name;\n"
    "            if (urlParams.has(name)) {\n"
    "                input.value = urlParams.get(name);\n"
    "            }\n"
    "        });\n"
    "        window.onload = function () {\n"
    "            \n"
    "            // Initialize Server-Sent Events (SSE)\n"
    "            let eventSource = new EventSource('/sse?type=omnithree');\n"
    "\n"
    "            // SSE feedback update\n"
    "            eventSource.onmessage = function(event) {\n"
    "                try {\n"
    "                    const data = JSON.parse(event.data);\n"
    "\n"
    "                    const matrix1 = data.matrix || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n"
    "                    const matrix2 = data.inverse || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n"
    "                    const scalar1 = data.scalar1 || 0;\n"
    "                    const scalar2 = data.scalar2 || 0;\n"
    "\n"
    "                    // Fill matrix inputs\n"
    "                    matrix1.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${1}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar1 input\n"
    "                    const scalarInput1 = document.querySelector(`input[name=\"1\"]`);\n"
    "                    if (scalarInput1) scalarInput1.value = scalar1.toFixed(2);\n"
    "\n"
    "                    // Fill Inverse matrix inputs\n"
    "                    matrix2.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${2}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar2 input\n"
    "                    const scalarInput2 = document.querySelector(`input[name=\"2\"]`);\n"
    "                    if (scalarInput2) scalarInput2.value = scalar2.toFixed(2);\n"
    "\n"
    "                } catch (err) {\n"
    "                    console.error(\"SSE data error:\", err);\n"
    "                }\n"
    "                eventSource.close();\n"
    "            };\n"
    "\n"
    "        }\n"
    "    </script>\n"
    ""
    "</body>"
    "</html>";

const char* omni4 =
    "<!DOCTYPE html>"
    "<html lang=\"de\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <title>Kinematik Omni4</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-row\">"
    "    <div class=\"box\">"
    "    <p><strong>Unterstützte Operationen:</strong></p>"
    "    <ul>"
    "        <li><code>+</code></li>"
    "        <li><code>-</code></li>"
    "        <li><code>*</code></li>"
    "        <li><code>/</code></li>"
    "        <li><code>PI</code></li>"
    "        <li><code>sqrt(x)</code></li>"
    "        <li><code>sin(x)</code></li>"
    "        <li><code>cos(x)</code></li>"
    "        <li><code>tan(x)</code></li>"
    "        <li><code>pow(x, y)</code> </li>"
    "    </ul>"
    "    </div>"
    "    <div class=\"layout-col\">"
    "        <h1>Kinematik Konfiguration</h1>"
    "        <form action=\"/omnifour\" method=\"get\">"
    "            <div class=\"layout-col\">"
    "            <div class=\"box\">"
    "                <h2>Omni 4 - Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"111\" required ></td><td><input type=\"string\" name=\"112\" required ></td><td><input type=\"string\" name=\"113\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"121\" required ></td><td><input type=\"string\" name=\"122\" required ></td><td><input type=\"string\" name=\"123\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"131\" required ></td><td><input type=\"string\" name=\"132\" required ></td><td><input type=\"string\" name=\"133\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"1\" required >"
    "                <h2>Inverse-Matrix</h2>"
    "                <table><tbody>"
    "                    <tr><td><input type=\"string\" name=\"211\" required ></td><td><input type=\"string\" name=\"212\" required ></td><td><input type=\"string\" name=\"213\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"221\" required ></td><td><input type=\"string\" name=\"222\" required ></td><td><input type=\"string\" name=\"223\" required ></td></tr>"
    "                    <tr><td><input type=\"string\" name=\"231\" required ></td><td><input type=\"string\" name=\"232\" required ></td><td><input type=\"string\" name=\"233\" required ></td></tr>"
    "                </tbody></table>"
    "                <label>Scalar:</label>"
    "                <input type=\"string\" name=\"2\" required >"
    "            </div>"
    "            <button class=\"link\" type=\"submit\">Matrix speichern</button>"
    "            </div>"
    "        </form>"
    "        <button class=\"link\" onclick=\"window.location.href='/'\" >Hauptmenü</button>"
    "    </div>"
    "    </div>"
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    "    <script>\n"
    "        // Restore inputs from URL\n"
    "        const urlParams = new URLSearchParams(window.location.search);\n"
    "        document.querySelectorAll('input[name]').forEach(input => {\n"
    "            const name = input.name;\n"
    "            if (urlParams.has(name)) {\n"
    "                input.value = urlParams.get(name);\n"
    "            }\n"
    "        });\n"
    "        window.onload = function () {\n"
    "            // Initialize Server-Sent Events (SSE)\n"
    "            let eventSource = new EventSource('/sse?type=omnifour');\n"
    "\n"
    "            // SSE feedback update\n"
    "            eventSource.onmessage = function(event) {\n"
    "                try {\n"
    "                    const data = JSON.parse(event.data);\n"
    "\n"
    "                    const matrix1 = data.matrix || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n"
    "                    const matrix2 = data.inverse || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n"
    "                    const scalar1 = data.scalar1 || 0;\n"
    "                    const scalar2 = data.scalar2 || 0;\n"
    "\n"
    "                    // Fill matrix inputs\n"
    "                    matrix1.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${1}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar1 input\n"
    "                    const scalarInput1 = document.querySelector(`input[name=\"1\"]`);\n"
    "                    if (scalarInput1) scalarInput1.value = scalar1.toFixed(2);\n"
    "\n"
    "                    // Fill Inverse matrix inputs\n"
    "                    matrix2.forEach((row, i) => {\n"
    "                        row.forEach((val, j) => {\n"
    "                            const input = document.querySelector(`input[name=\"${2}${i+1}${j+1}\"]`);\n"
    "                            if (input) input.value = parseFloat(val).toFixed(2);\n"
    "                        });\n"
    "                    });\n"
    "\n"
    "                    // Fill scalar2 input\n"
    "                    const scalarInput2 = document.querySelector(`input[name=\"2\"]`);\n"
    "                    if (scalarInput2) scalarInput2.value = scalar2.toFixed(2);\n"
    "\n"
    "                } catch (err) {\n"
    "                    console.error(\"SSE data error:\", err);\n"
    "                }\n"
    "                eventSource.close();\n"
    "            };\n"
    "\n"
    "        }\n"
    "    </script>\n"
    ""
    "</body>"
    "</html>";

const char* pathinterpolator =
    "<!DOCTYPE html>"
    "<html lang=\"en\">"
    "<head>"
    "    <meta charset=\"UTF-8\">"
    "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
    "    <title>Path Interpolator Configuration</title>"
    "    <link rel=\"stylesheet\" href=\"/styles.css\">"
    "</head>"
    "<body>"
    "    <div class=\"layout-col\">"
    "        <h1>Path Interpolator Configuration</h1>"
    "        <form class=\"layout-col\" action=\"/pathplanning\" method=\"get\">"
    ""
    "            <div class=\"status\">"
    "                <label for=\"translationalSpeed\">Translatorische Geschwindigkeit (m/s):</label>"
    "                <input type=\"number\" id=\"translationalSpeed\" name=\"translationalSpeed\" min=\"0\" step=\"0.01\" placeholder=\"Translatorische Geschwindigkeit in m/s\" value=\"0.15\" required>"
    "            </div>"
    "            <div class=\"status\">"
    "                <label for=\"translationalAcceleration\">Translatorische Beschleunigung (m/s²):</label>"
    "                <input type=\"number\" id=\"translationalAcceleration\" name=\"translationalAcceleration\" min=\"0\" step=\"0.01\" placeholder=\"Translatorische Beschleunigung in m/s²\" value=\"0.05\" required>"
    "            </div>"
    "            <div class=\"status\">"
    "                <label for=\"rotationalSpeed\">Rotatorische Geschwindigkeit (degrees/s):</label>"
    "                <input type=\"number\" id=\"rotationalSpeed\" name=\"rotationalSpeed\" min=\"0\" step=\"0.01\" placeholder=\"Rotatorische Geschwindigkeit in degrees/s\" value=\"0.2\" required>"
    "            </div>"
    "            <div class=\"status\">"
    "                <label for=\"rotationalAcceleration\">Rotatorische Beschleunigung (degrees/s²):</label>"
    "                <input type=\"number\" id=\"rotationalAcceleration\" name=\"rotationalAcceleration\" min=\"0\" step=\"0.01\" placeholder=\"Rotatorische Beschleunigung in degrees/s²\" value=\"0.05\" required>"
    "            </div>"
    ""
    ""
    ""
    "            <!-- Hidden input to track number of points -->"
    "            <input type=\"hidden\" id=\"pointCount\" name=\"pointCount\" value=\"2\">"
    ""
    "            <div class=\"box\" id=\"pointsContainer\">"
    "                <div class=\"points-label\">"
    "                    <label>Points:</label><br>"
    "                    <label>X (m) Y (m) Theta (°)</label>"
    "                </div>"
    "                <div class=\"point\">"
    "                    <input type=\"number\" name=\"x1\" placeholder=\"X (m)\" min=\"0\" step=\"0.01\" value=\"0\" required>"
    "                    <input type=\"number\" name=\"y1\" placeholder=\"Y (m)\" min=\"0\" step=\"0.01\" value=\"0\" required>"
    "                    <input type=\"number\" name=\"theta1\" placeholder=\"Theta (°)\" min=\"0\" step=\"0.01\" value=\"0\" required>"
    "                    <button type=\"button\" class=\"delete-button\" onclick=\"removePoint(this)\">Delete</button>"
    "                </div>"
    "                <div class=\"point\">"
    "                    <input type=\"number\" name=\"x2\" placeholder=\"X (m)\" min=\"0\" step=\"0.01\" required>"
    "                    <input type=\"number\" name=\"y2\" placeholder=\"Y (m)\" min=\"0\" step=\"0.01\" required>"
    "                    <input type=\"number\" name=\"theta2\" placeholder=\"Theta (°)\" min=\"0\" step=\"0.01\" required>"
    "                    <button type=\"button\" class=\"delete-button\" onclick=\"removePoint(this)\">Delete</button>"
    "                </div>"
    "                <!-- Additional points will be added here -->"
    "            </div>"
    "            "
    "            <button type=\"button\" id=\"addPointButton\">Add Point</button>"
    "            <button type=\"submit\">Start</button>"
    "        </form>"
    ""
    "        <button class=\"link\" onclick=\"window.location.href='/'\" >Hauptmenü</button>"
    "    </div>"
    ""
    "    <script>\n"
    "        let pointCount = 2;\n"
    "        const maxPoints = 6;\n"
    "\n"
    "        function updatePointCount() {\n"
    "            document.getElementById('pointCount').value = pointCount;\n"
    "        }\n"
    "\n"
    "        function removePoint(button) {\n"
    "            const pointContainer = button.parentElement;\n"
    "            if (pointContainer.parentElement.children.length > 2) {\n"
    "                pointContainer.remove();\n"
    "                pointCount--;\n"
    "                updatePointCount();\n"
    "                updatePointNames();\n"
    "            } else {\n"
    "                alert('You must have at least 2 points.');\n"
    "            }\n"
    "        }\n"
    "\n"
    "        function updatePointNames() {\n"
    "            const points = document.querySelectorAll('.point');\n"
    "            points.forEach((point, index) => {\n"
    "                point.querySelectorAll('input').forEach((input, i) => {\n"
    "                    const name = ['x', 'y', 'theta'][i];\n"
    "                    input.name = `${name}${index + 1}`;\n"
    "                });\n"
    "            });\n"
    "        }\n"
    "\n"
    "        function addPoint(x = '', y = '', theta = '') {\n"
    "            if (pointCount >= maxPoints) {\n"
    "                alert(\"Maximale Punktanzahl erreicht.\");\n"
    "                return;\n"
    "            }\n"
    "            pointCount++;\n"
    "            const container = document.getElementById('pointsContainer');\n"
    "            const newPoint = document.createElement('div');\n"
    "            newPoint.classList.add('point');\n"
    "            newPoint.innerHTML = `\n"
    "                <input type=\"number\" name=\"x${pointCount}\" placeholder=\"X (m)\" min=\"0\" step=\"0.01\" value=\"${x}\" required>\n"
    "                <input type=\"number\" name=\"y${pointCount}\" placeholder=\"Y (m)\" min=\"0\" step=\"0.01\" value=\"${y}\" required>\n"
    "                <input type=\"number\" name=\"theta${pointCount}\" placeholder=\"Theta (°)\" min=\"0\" step=\"0.01\" value=\"${theta}\" required>\n"
    "                <button type=\"button\" class=\"delete-button\" onclick=\"removePoint(this)\">Delete</button>\n"
    "            `;\n"
    "            container.appendChild(newPoint);\n"
    "            updatePointCount();\n"
    "        }\n"
    "\n"
    "        document.getElementById('addPointButton').addEventListener('click', () => addPoint());\n"
    "\n"
    "        function clearPoints() {\n"
    "            const container = document.getElementById('pointsContainer');\n"
    "            container.querySelectorAll('.point').forEach((el, index) => {\n"
    "                if (index >= 2) el.remove();\n"
    "            });\n"
    "            const defaults = container.querySelectorAll('.point input');\n"
    "            defaults.forEach(input => input.value = 0);\n"
    "            pointCount = 2;\n"
    "            updatePointCount();\n"
    "            updatePointNames();\n"
    "        };\n"
    "\n"
    "       window.onload = function () {\n"
    "            const eventSource = new EventSource(\"/sse?type=pathplanning\");\n"
    "            eventSource.onmessage = function (event) {\n"
    "                try {\n"
    "                    const payload = JSON.parse(event.data);\n"
    "\n"
    "                    // Felder für Bewegung setzen\n"
    "                    if (payload.translationalSpeed !== undefined)\n"
    "                        document.getElementById('translationalSpeed').value = payload.translationalSpeed;\n"
    "\n"
    "                    if (payload.translationalAcceleration !== undefined)\n"
    "                        document.getElementById('translationalAcceleration').value = payload.translationalAcceleration;\n"
    "\n"
    "                    if (payload.rotationalSpeed !== undefined)\n"
    "                        document.getElementById('rotationalSpeed').value = payload.rotationalSpeed;\n"
    "\n"
    "                    if (payload.rotationalAcceleration !== undefined)\n"
    "                        document.getElementById('rotationalAcceleration').value = payload.rotationalAcceleration;\n"
    "\n"
    "                    // Punkte laden\n"
    "                    const points = payload.points ;\n"
    "                    if (Array.isArray(points)) {\n"
    "                        clearPoints();\n"
    "                        points .forEach((point, i) => {\n"
    "                            if (i < 2) {\n"
    "                                const inputs = document.querySelectorAll('.point')[i].querySelectorAll('input');\n"
    "                                inputs[0].value = point.x;\n"
    "                                inputs[1].value = point.y;\n"
    "                                inputs[2].value = point.theta;\n"
    "                            } else {\n"
    "                                addPoint(point.x, point.y, point.theta);\n"
    "                            }\n"
    "                        });\n"
    "                    }\n"
    "                } catch (e) {\n"
    "                    console.error(\"Fehler beim Parsen der Punkte:\", e);\n"
    "                }\n"
    "                eventSource.close();\n"
    "            };\n"
    "            eventSource.onerror = function () {\n"
    "                console.error(\"SSE fehlgeschlagen.\");\n"
    "                eventSource.close();\n"
    "            };\n"
    "        };\n"
    "    </script>\n"
    ""
    "</body>"
    "</html>";

const char* sse_resp =
    "<!-- SSE Response Template -->"
    "<http-response>"
    "  <status>HTTP/1.1 200 OK</status>"
    "  <headers>"
    "    <header name=\"Cache-Control\">no-store</header>"
    "    <header name=\"Content-Type\">text/event-stream</header>"
    "  </headers>"
    "  <body>"
    "    retry: 20000"
    ""
    "  </body>"
    "</http-response>";

const char* styles =
    "/*Flex Body for Status Felder*/"
    ".status-container {"
    "    display: flex;"
    "    flex-wrap: wrap;"
    "    justify-content: center;"
    "    gap: 20px;"
    "    margin-bottom: 20px;"
    "}"
    "/* Status Felder*/"
    ".status {"
    "    width: 320px;"
    "    background-color: #fff;"
    "    border-radius: 10px;"
    "    padding: 20px;"
    "    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);"
    "    margin-bottom: 20px;"
    "    text-align: center;"
    "}"
    ""
    ".status-title {"
    "    font-size: 18px;"
    "    margin-bottom: 10px;"
    "}"
    ""
    ".status-value {"
    "    font-size: 24px;"
    "    font-weight: bold;"
    "}"
    ""
    ""
    ""
    "/*Info Text Box*/"
    ".info-box {"
    "  background-color: #f9f9f9;"
    "  padding: 1em;"
    "  font-family: sans-serif;"
    "}"
    ".info-box code {"
    "  background-color: #eee;"
    "  padding: 0 4px;"
    "  border-radius: 3px;"
    "}"
    ""
    ""
    ".points-label {"
    "    font-weight: bold;"
    "    margin-bottom: 0.5em;"
    "}"
    ""
    ".points-label label {"
    "    display: inline-block;"
    "    margin-right: 2em;"
    "}"
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    ""
    "body {"
    "    margin: 0;"
    "    font-family: Arial, sans-serif;"
    "    background: "
    "        radial-gradient(circle at center, rgba(250, 101, 37, 1), transparent), /* Radial gradient at the center */"
    "        linear-gradient(to left, rgba(35, 35, 35, 1), transparent), /* Linear gradient to the left */"
    "        linear-gradient(to right, rgba(35, 35, 35, 1), transparent); /* Linear gradient to the right */"
    "    background-blend-mode: multiply; /* Blend mode for background layers */"
    "}"
    ""
    "h1 {"
    "    color: #333;"
    "    width: 320px; /* Set fixed width */"
    "    height: fit-content; /* Set dynamic height */"
    "    background-color: #fff;"
    "    border-radius: 10px;"
    "    padding: 5px;"
    "    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);"
    ""
    "    text-align: center;"
    "}"
    ""
    ""
    ""
    ""
    "select {"
    "    width: 100%;"
    "    padding: 10px;"
    "    border: 1px solid #ccc;"
    "    border-radius: 5px;"
    "    box-sizing: border-box;"
    "    font-size: 16px;"
    "}"
    ""
    ""
    ""
    "button:hover {"
    "    background-color: #ff8826;"
    "}"
    ""
    "a {"
    "    color: #007bff;"
    "    text-decoration: none;"
    "    transition: color 0.3s ease;"
    "}"
    ""
    "a:hover {"
    "    color: #0056b3;"
    "}"
    ""
    ".link {"
    "    background-color: #ff7300;"
    "    color: #fff;"
    "    padding: 5px 5px;"
    "    border: none;"
    "    border-radius: 5px;"
    "    font-size: 16px;"
    "    cursor: pointer;"
    "    transition: background-color 0.5s ease;"
    "    width: 300px;"
    "    text-align: center;"
    "    margin: 2px;"
    "}"
    ""
    ""
    ".hidden {"
    "    display: none;"
    "}"
    ""
    ""
    ""
    "/*Layouts*/"
    ".layout-col {"
    "    display: flex;"
    "    flex-direction: column;"
    "    justify-content: center;"
    "    align-items: center;"
    "}"
    ".layout-row {"
    "    display: flex;"
    "    flex-direction: row;"
    "    justify-content: center;"
    "    align-items: center;"
    "}"
    ".inline-row {"
    "  display: flex;"
    "  align-items: center;"
    "  gap: 4px; /* oder 0 für keinen Abstand */"
    "}"
    ""
    "/*White Text Box*/"
    ".box {"
    "    background-color: #fff;"
    "    border-radius: 10px;"
    "    padding: 20px;"
    "    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);"
    "    text-align: center;"
    "    margin: 2px;"
    "}";
